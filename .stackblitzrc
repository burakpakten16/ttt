{
  "installDependencies": true,
  "compileTrigger": "save",
  "startCommand": "setup-nativescript-stackblitz && ns preview"
}
import React, { useState, useEffect } from 'react';
import { StyleSheet, View, Text, ScrollView, TouchableOpacity, Image } from 'react-native';

// Bur√ß simgeleri ve bilgileri
const zodiacSigns = {
  koc: {
    name: "Ko√ß",
    dates: "21 Mart - 19 Nisan",
    element: "Ate≈ü",
    icon: "üêè"
  },
  boga: {
    name: "Boƒüa",
    dates: "20 Nisan - 20 Mayƒ±s",
    element: "Toprak",
    icon: "üêÇ"
  },
  ikizler: {
    name: "ƒ∞kizler",
    dates: "21 Mayƒ±s - 20 Haziran",
    element: "Hava",
    icon: "üë•"
  },
  // Diƒüer bur√ßlar benzer ≈üekilde eklenecek
};

// Yorum √ºreteci fonksiyonu
const generateHoroscope = (sign) => {
  const aspects = {
    love: [
      "Duygusal baƒülarƒ±nƒ±z g√º√ßlenecek",
      "Yeni bir a≈ük kapƒ±da olabilir",
      "ƒ∞li≈ükinizde derin konu≈ümalar sizi bekliyor",
      "Partneriyle ileti≈üiminiz g√º√ßlenecek",
      "Romantik s√ºrprizlere a√ßƒ±k olun"
    ],
    career: [
      "Kariyer fƒ±rsatlarƒ± kapƒ±nƒ±zƒ± √ßalacak",
      "ƒ∞≈ü yerinde yeni sorumluluklar alabilirsiniz",
      "Projeleriniz olumlu sonu√ßlanacak",
      "Yeni i≈ü teklifleri deƒüerlendirebilirsiniz",
      "Mesleki geli≈üiminiz hƒ±z kazanacak"
    ],
    health: [
      "Enerjiniz y√ºksek olacak",
      "Spor yapmak i√ßin uygun bir g√ºn",
      "Saƒülƒ±klƒ± beslenmeye √∂zen g√∂sterin",
      "Mental saƒülƒ±ƒüƒ±nƒ±za dikkat edin",
      "D√ºzenli uyku √∂nemli olacak"
    ],
    finance: [
      "Beklenmedik kazan√ßlar olabilir",
      "Yatƒ±rƒ±mlarƒ±nƒ±z meyvesini verecek",
      "Harcamalarƒ±nƒ±zƒ± kontrol altƒ±nda tutun",
      "Finansal kararlar i√ßin uygun bir g√ºn",
      "B√ºt√ßenizi g√∂zden ge√ßirin"
    ]
  };

  const getRandomPrediction = (category) => {
    const predictions = aspects[category];
    return predictions[Math.floor(Math.random() * predictions.length)];
  };

  return {
    love: getRandomPrediction('love'),
    career: getRandomPrediction('career'),
    health: getRandomPrediction('health'),
    finance: getRandomPrediction('finance'),
    date: new Date().toLocaleDateString('tr-TR')
  };
};

// Ana uygulama bile≈üeni
const App = () => {
  const [selectedSign, setSelectedSign] = useState(null);
  const [horoscope, setHoroscope] = useState(null);

  useEffect(() => {
    if (selectedSign) {
      setHoroscope(generateHoroscope(selectedSign));
    }
  }, [selectedSign]);

  // Her gece yarƒ±sƒ± yorumlarƒ± g√ºncelle
  useEffect(() => {
    const now = new Date();
    const night = new Date(
      now.getFullYear(),
      now.getMonth(),
      now.getDate() + 1,
      0, 0, 0
    );
    const msToMidnight = night.getTime() - now.getTime();

    const timer = setTimeout(() => {
      if (selectedSign) {
        setHoroscope(generateHoroscope(selectedSign));
      }
    }, msToMidnight);

    return () => clearTimeout(timer);
  }, [selectedSign]);

  if (!selectedSign) {
    return (
      <ScrollView style={styles.container}>
        <Text style={styles.title}>Burcunuzu Se√ßin</Text>
        <View style={styles.signsGrid}>
          {Object.entries(zodiacSigns).map(([key, sign]) => (
            <TouchableOpacity
              key={key}
              style={styles.signButton}
              onPress={() => setSelectedSign(key)}
            >
              <Text style={styles.signIcon}>{sign.icon}</Text>
              <Text style={styles.signName}>{sign.name}</Text>
              <Text style={styles.signDates}>{sign.dates}</Text>
            </TouchableOpacity>
          ))}
        </View>
      </ScrollView>
    );
  }

  return (
    <ScrollView style={styles.container}>
      <TouchableOpacity
        style={styles.backButton}
        onPress={() => setSelectedSign(null)}
      >
        <Text style={styles.backButtonText}>‚Üê Geri</Text>
      </TouchableOpacity>

      <View style={styles.horoscopeContainer}>
        <Text style={styles.selectedSignTitle}>
          {zodiacSigns[selectedSign].icon} {zodiacSigns[selectedSign].name}
        </Text>
        <Text style={styles.date}>{horoscope.date}</Text>

        <View style={styles.aspectContainer}>
          <Text style={styles.aspectTitle}>üíù A≈ük</Text>
          <Text style={styles.aspectText}>{horoscope.love}</Text>
        </View>

        <View style={styles.aspectContainer}>
          <Text style={styles.aspectTitle}>üíº Kariyer</Text>
          <Text style={styles.aspectText}>{horoscope.career}</Text>
        </View>

        <View style={styles.aspectContainer}>
          <Text style={styles.aspectTitle}>üè• Saƒülƒ±k</Text>
          <Text style={styles.aspectText}>{horoscope.health}</Text>
        </View>

        <View style={styles.aspectContainer}>
          <Text style={styles.aspectTitle}>üí∞ Finans</Text>
          <Text style={styles.aspectText}>{horoscope.finance}</Text>
        </View>
      </View>
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f5f5f5',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    textAlign: 'center',
    padding: 20,
    color: '#333',
  },
  signsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-around',
    padding: 10,
  },
  signButton: {
    width: '45%',
    backgroundColor: 'white',
    borderRadius: 15,
    padding: 15,
    margin: 5,
    alignItems: 'center',
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.25,
    shadowRadius: 3.84,
    elevation: 5,
  },
  signIcon: {
    fontSize: 32,
    marginBottom: 5,
  },
  signName: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#333',
  },
  signDates: {
    fontSize: 12,
    color: '#666',
    textAlign: 'center',
  },
  backButton: {
    padding: 15,
  },
  backButtonText: {
    color: '#007AFF',
    fontSize: 16,
  },
  horoscopeContainer: {
    padding: 20,
  },
  selectedSignTitle: {
    fontSize: 28,
    fontWeight: 'bold',
    textAlign: 'center',
    marginBottom: 5,
  },
  date: {
    fontSize: 16,
    color: '#666',
    textAlign: 'center',
    marginBottom: 20,
  },
  aspectContainer: {
    backgroundColor: 'white',
    borderRadius: 10,
    padding: 15,
    marginBottom: 15,
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 1,
    },
    shadowOpacity: 0.20,
    shadowRadius: 1.41,
    elevation: 2,
  },
  aspectTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 5,
    color: '#333',
  },
  aspectText: {
    fontSize: 16,
    color: '#444',
    lineHeight: 22,
  },
});